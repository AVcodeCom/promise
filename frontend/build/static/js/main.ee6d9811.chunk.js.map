{"version":3,"sources":["components/Input/OpenNewCard.jsx","components/List/List.jsx","store/openNewCard/action.js","components/Input/Input.jsx","store/list/action.js","components/Header/Header.jsx","components/Registration/Registration.jsx","components/Autorisation/Autorisation.jsx","store/token/action.js","store/entrance/action.js","store/registration/action.js","App.jsx","store/token/reducer.js","store/list/reducer.js","store/completedList/reducer.js","store/openNewCard/reducer.js","store/entrance/reducer.js","store/reducersCombaine.js","index.js"],"names":["useStyles","makeStyles","theme","root","maxWidth","width","margin","spacing","color","blueGrey","closeButton","position","right","top","palette","grey","InputTextField","withStyles","borderColor","borderWidth","bordertWidth","padding","TextField","OpenNewCard","isOpenNewCard","closeNewCard","newPointList","classes","inputDescription","createRef","inputName","Dialog","id","fullWidth","aria-coreelledby","anchor","open","onClose","DialogTitle","Typography","variant","gutterBottom","className","IconButton","aria-coreel","onClick","DialogContent","DialogContentText","coreel","inputRef","multiline","rows","DialogActions","buttonPosition","Button","style","background","minWidth","current","value","paddingLeft","borderBottom","paddingTop","paddingBottom","List","list","map","item","Box","key","m","ExpansionPanel","ExpansionPanelSummary","name","ExpansionPanelDetails","Grid","container","direction","justify","alignItems","component","description","OPEN_NEW_CARD","CLOSE_NEW_CARD","Input","this","props","openNewCard","console","log","pl","py","Component","connect","store","newCardReducer","listReducer","dispatch","type","payload","a","async","Date","now","formData","FormData","append","requestOptions","body","headers","Authorization","localStorage","getItem","method","fetch","response","json","flexGrow","title","Header","isAutorisation","entrance","openAuterisation","openRegistration","openAccauntMenu","closeAccauntMenu","accauntMenu","exitAccaunt","AppBar","Toolbar","Menu","getContentAnchorEl","anchorOrigin","vertical","horizontal","transformOrigin","MenuItem","Registration","registration","neweEmaildValue","newLoginValue","newPasswordValue","size","Autorisation","autorisation","newList","loginValue","passwordValue","autoComplete","EXIT_ACCAUNT","OPEN_AUTORISATION","OPEN_REGISTRATION","OPEN_ACCAUNT_MENU","CLOSE_ACCAUNT_MENU","App","newTokenFromRefresh","remember","tokenData","completedList","isOpenTopDraw","height","tokenReducer","token","completedListReducer","changeEntranceReduser","username","password","autor","ok","setItem","access","refresh","newToken","newEmail","newUsername","newPassword","newUser","results","tokenRefresh","requestOptions2","resp","status","clear","hasToken","initialState","rootReducer","combineReducers","state","action","createStore","applyMiddleware","logger","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ee6d9811.chunk.js","sourcesContent":["import React, { createRef } from \"react\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\r\nimport blueGrey from \"@material-ui/core/colors/blueGrey\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    maxWidth: \"34em\",\r\n    width: \"100%\",\r\n    \"& > *\": {\r\n      margin: theme.spacing(2),\r\n      color: blueGrey[300],\r\n    },\r\n  },\r\n  color: {\r\n    color: blueGrey[400],\r\n  },\r\n\r\n  closeButton: {\r\n    position: \"absolute\",\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n  },\r\n}));\r\n\r\nconst InputTextField = withStyles({\r\n  root: {\r\n    \"& input:valid + fieldset,\": {\r\n      borderColor: blueGrey[500],\r\n      borderWidth: 1,\r\n    },\r\n    \"& input:invalid + fieldset\": {\r\n      borderColor: blueGrey[200],\r\n      borderWidth: 2,\r\n    },\r\n    \"& input:valid:focus + fieldset\": {\r\n      bordertWidth: 4,\r\n      borderColor: blueGrey[200],\r\n      padding: \"4px !important\",\r\n    },\r\n    \"& coreel.Mui-focused\": {\r\n      color: blueGrey[700],\r\n    },\r\n\r\n    \"& textarea + fieldset,\": {\r\n      borderColor: blueGrey[500],\r\n      borderWidth: 1,\r\n    },\r\n    \"& textarea + fieldset\": {\r\n      borderColor: blueGrey[200],\r\n      borderWidth: 1,\r\n    },\r\n\r\n    \"& textarea:valid:focus + fieldset\": {\r\n      bordertWidth: 4,\r\n      borderColor: blueGrey[200],\r\n      padding: \"4px !important\",\r\n    },\r\n  },\r\n})(TextField);\r\n\r\nexport const OpenNewCard = ({ isOpenNewCard, closeNewCard, newPointList }) => {\r\n  const classes = useStyles();\r\n  const inputDescription = createRef();\r\n  const inputName = createRef();\r\n  return (\r\n    <Dialog\r\n      id=\"customized-dialog-title\"\r\n      fullWidth={true}\r\n      maxWidth={\"sm\"}\r\n      aria-coreelledby=\"customized-dialog-title\"\r\n      anchor=\"top\"\r\n      open={isOpenNewCard}\r\n      onClose={() => {\r\n        closeNewCard();\r\n      }}\r\n    >\r\n      <DialogTitle id=\"customized-dialog-title\">\r\n        <Typography variant=\"h6\" gutterBottom className={classes.color}>\r\n          Новая задача\r\n        </Typography>\r\n\r\n        <IconButton\r\n          aria-coreel=\"close\"\r\n          className={classes.closeButton}\r\n          onClick={() => closeNewCard()}\r\n        >\r\n          <CloseIcon />\r\n        </IconButton>\r\n      </DialogTitle>\r\n      <DialogContent>\r\n        <DialogContentText>\r\n          Введите название и описание карточки\r\n        </DialogContentText>\r\n\r\n        <InputTextField\r\n          coreel=\"Название\"\r\n          variant=\"outlined\"\r\n          className={classes.root}\r\n          inputRef={inputName}\r\n        />\r\n\r\n        <InputTextField\r\n          className={classes.root}\r\n          coreel=\"Описание\"\r\n          variant=\"outlined\"\r\n          inputRef={inputDescription}\r\n          multiline\r\n          rows=\"5\"\r\n        />\r\n      </DialogContent>\r\n      <DialogActions className={classes.buttonPosition}>\r\n        <Button\r\n          id=\"standard-multiline-flexible\"\r\n          variant=\"contained\"\r\n          style={{\r\n            background: blueGrey[400],\r\n            color: blueGrey[50],\r\n            minWidth: 280,\r\n          }}\r\n          onClick={() => {\r\n            newPointList(\r\n              inputName.current.value,\r\n              inputDescription.current.value\r\n            );\r\n            closeNewCard();\r\n          }}\r\n        >\r\n          Добавить\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport blueGrey from \"@material-ui/core/colors/blueGrey\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport ExpansionPanel from \"@material-ui/core/ExpansionPanel\";\r\nimport ExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\r\nimport ExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    paddingLeft: 15,\r\n    borderBottom: \"1px solid rgba(0, 0, 0, .125)\",\r\n  },\r\n  color: {\r\n    color: blueGrey[400],\r\n    paddingTop: 10,\r\n    paddingBottom: 10,\r\n  },\r\n  minWidth: {\r\n    minWidth: 300,\r\n\r\n  }\r\n});\r\n\r\nconst List = ({ list }) => {\r\n  const classes = useStyles();\r\n\r\n  return list.map((item) => (\r\n    <Box key={item.id} m={2} width=\"80%\">\r\n      <ExpansionPanel>\r\n        <ExpansionPanelSummary className={classes.root}>\r\n          <Typography variant=\"h5\" className={classes.color}>\r\n            {item.name}\r\n          </Typography>\r\n        </ExpansionPanelSummary>\r\n        <ExpansionPanelDetails>\r\n          <Grid\r\n            container\r\n            direction=\"row\"\r\n            justify=\"space-between\"\r\n            alignItems=\"flex-start\"\r\n          >\r\n            <Box width=\"50%\" className={classes.minWidth}>\r\n              <Typography variant=\"h6\" className={classes.color}>\r\n                Подробности: \r\n              </Typography>\r\n              <Typography component=\"p\" variant=\"body1\">\r\n                {item.description}\r\n              </Typography>\r\n            </Box>\r\n\r\n            <Box width=\"50%\" className={classes.minWidth}>\r\n            <Typography variant=\"h6\" className={classes.color}>\r\n                Описание:\r\n              </Typography>\r\n\r\n              <Typography component=\"p\" variant=\"body1\" className={classes.color}>\r\n                Статус:\r\n              </Typography>\r\n\r\n              <Typography component=\"p\" variant=\"body1\" className={classes.color}>\r\n                Важность:\r\n              </Typography>\r\n\r\n              <Typography component=\"p\" variant=\"body1\" className={classes.color}>\r\n                Категория:\r\n              </Typography>\r\n              \r\n              <Typography component=\"p\" variant=\"body1\" className={classes.color}>\r\n                Дедлайн:\r\n              </Typography>\r\n            </Box>\r\n          </Grid>\r\n        </ExpansionPanelDetails>\r\n      </ExpansionPanel>\r\n    </Box>\r\n  ));\r\n};\r\n\r\nexport default List;\r\n\r\n/* <input type=\"checkbox\" onClick={() => props.onCheck(list.id)} /> */\r\n\r\n/* \r\n      <a href=\"###\" onClick={() => props.toCompleted(list.id)}>\r\n        выполненно\r\n      </a> */\r\n","export const OPEN_NEW_CARD = \"OPEN_NEW_CARD\";\r\nexport const CLOSE_NEW_CARD = \"CLOSE_TOP_CARD\";\r\n\r\nexport function openNewCard() {\r\n    return {\r\n      type: OPEN_NEW_CARD,\r\n      payload: true,\r\n    }\r\n  }\r\n\r\nexport function closeNewCard() {\r\n    return {\r\n      type: CLOSE_NEW_CARD,\r\n      payload: false,\r\n    }\r\n  }","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { OpenNewCard } from \"./OpenNewCard\";\r\nimport List from \"../List/List\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport blueGrey from \"@material-ui/core/colors/blueGrey\";\r\nimport { openNewCard } from \"../../store/openNewCard/action\";\r\nimport { closeNewCard } from \"../../store/openNewCard/action\";\r\nimport { newPointList } from \"../../store/list/action\";\r\n\r\nclass Input extends Component {\r\n\r\n  render() {\r\n    const {\r\n      list,\r\n      openNewCard,\r\n      isOpenNewCard,\r\n      closeNewCard,\r\n      newPointList,\r\n    } = this.props;\r\n    console.log(openNewCard);\r\n    return (\r\n      <section>\r\n        <OpenNewCard\r\n          isOpenNewCard={isOpenNewCard}\r\n          closeNewCard={closeNewCard}\r\n          newPointList={newPointList}\r\n        />\r\n\r\n        <Box pl={10} py={5}>\r\n          <Button\r\n            variant=\"contained\"\r\n            style={{\r\n              background: blueGrey[400],\r\n              color: blueGrey[50],\r\n              minWidth: 280,\r\n            }}\r\n            onClick={() => {\r\n              openNewCard();\r\n            }}\r\n          >\r\n            Добавить новую запись\r\n          </Button>\r\n        </Box>\r\n\r\n        <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\">\r\n          <List list={list} />\r\n        </Grid>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToprops = (store) => {\r\n  return {\r\n    isOpenNewCard: store.newCardReducer.isOpenNewCard,\r\n    list: store.listReducer.list,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    openNewCard: () => dispatch(openNewCard()),\r\n    closeNewCard: () => dispatch(closeNewCard()),\r\n    newPointList: (name, description) =>\r\n      dispatch(newPointList(name, description)),\r\n  };\r\n};\r\nexport default connect(mapStateToprops, mapDispatchToProps)(Input);\r\n","export const GET_LIST = \"GET_LIST\";\r\nexport const PUT_NEW_POINT_LIST = \"PUT_NEW_POINT_LIST\";\r\n\r\nexport const newList = () => {\r\n  return async dispatch => {\r\n    let requestOptions = {\r\n      method: \"GET\",\r\n      headers: {\r\n        Authorization: localStorage.getItem(\"Authorization\")\r\n      }\r\n    };\r\n\r\n    let response = await fetch(\r\n      `http://77.244.65.15:3527/api/v1/data/promise/`,\r\n      requestOptions\r\n    );\r\n    let list = await response.json();\r\n    await dispatch({\r\n      type: GET_LIST,\r\n      payload: list.results\r\n    });\r\n  };\r\n};\r\n\r\nexport const newPointList = (name, description) => {\r\n  return async dispatch => {\r\n    await dispatch({\r\n      type: PUT_NEW_POINT_LIST,\r\n      payload: {\r\n        id: Date.now(),\r\n        name: name,\r\n        description: description\r\n      }\r\n    });\r\n    let formData = new FormData();\r\n\r\n    formData.append(\"name\", name);\r\n    formData.append(\"description\", description);\r\n\r\n    let requestOptions = {\r\n      body: formData,\r\n      headers: {\r\n        Authorization: localStorage.getItem(\"Authorization\")\r\n      },\r\n      method: \"POST\"\r\n    };\r\n\r\n    let response = await fetch(\r\n      `http://77.244.65.15:3527/api/v1/data/promise/new/`,\r\n      requestOptions\r\n    );\r\n\r\n    console.log(response.json());\r\n  };\r\n};\r\n\r\n","import React, { Fragment } from \"react\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport blueGrey from \"@material-ui/core/colors/blueGrey\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nconst Header = ({\r\n  isAutorisation,\r\n  entrance,\r\n  openAuterisation,\r\n  openRegistration,\r\n  openAccauntMenu,\r\n  closeAccauntMenu,\r\n  accauntMenu,\r\n  exitAccaunt,\r\n}) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <AppBar position=\"static\" style={{ background: blueGrey[500] }}>\r\n      <Toolbar variant=\"dense\">\r\n        <Typography variant=\"h4\" color=\"inherit\" className={classes.title}>\r\n          Promise\r\n        </Typography>\r\n        {!isAutorisation ? (\r\n          <Fragment>\r\n            {entrance ? (\r\n              <Button color=\"inherit\" onClick={() => openRegistration()}>\r\n                Регистрация\r\n              </Button>\r\n            ) : (\r\n              <Button color=\"inherit\" onClick={() => openAuterisation()}>\r\n                Вход\r\n              </Button>\r\n            )}\r\n          </Fragment>\r\n        ) : (\r\n          <Fragment>\r\n            <IconButton onClick={() => openAccauntMenu()}>\r\n              <AccountCircle style={{ color: blueGrey[50] }} />\r\n            </IconButton>\r\n\r\n            <Menu\r\n              getContentAnchorEl={null}\r\n              anchorOrigin={{\r\n                vertical: \"top\",\r\n                horizontal: \"right\",\r\n              }}\r\n              transformOrigin={{\r\n                vertical: \"bottom\",\r\n                horizontal: \"left\",\r\n              }}\r\n              open={accauntMenu}\r\n              onClick={() => closeAccauntMenu()}\r\n            >\r\n              <MenuItem>Профиль</MenuItem>\r\n              <MenuItem\r\n                onClick={() => {\r\n                  exitAccaunt();\r\n                }}\r\n              >\r\n                Выйти\r\n              </MenuItem>\r\n            </Menu>\r\n          </Fragment>\r\n        )}\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React, { Component, createRef } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport blueGrey from \"@material-ui/core/colors/blueGrey\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"25em\",\r\n    \"& > *\": {\r\n      margin: theme.spacing(2),\r\n      color: blueGrey[300],\r\n    },\r\n  },\r\n  color: {\r\n    color: blueGrey[300],\r\n  },\r\n}));\r\n\r\nconst InputTextField = withStyles({\r\n  root: {\r\n    \"& input:valid + fieldset\": {\r\n      borderColor: blueGrey[600],\r\n      borderWidth: 1,\r\n    },\r\n    \"& input:invalid + fieldset\": {\r\n      borderColor: blueGrey[200],\r\n      borderWidth: 2,\r\n    },\r\n    \"& input:valid:focus + fieldset\": {\r\n      bordertWidth: 4,\r\n      borderColor: blueGrey[200],\r\n      padding: \"4px !important\", // override inline-style\r\n    },\r\n    \"& coreel.Mui-focused\": {\r\n      color: blueGrey[700],\r\n    },\r\n  },\r\n})(TextField);\r\n\r\nconst Registration = ({ registration }) => {\r\n  const neweEmaildValue = createRef();\r\n  const newLoginValue = createRef();\r\n  const newPasswordValue = createRef();\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className=\"autor\">\r\n      <Grid\r\n        container\r\n        direction=\"column\"\r\n \r\n        alignItems=\"center\"\r\n        justify=\"flex-start\"\r\n      >\r\n        <Typography variant=\"h2\" gutterBottom className={classes.color}>\r\n          Регистрация\r\n        </Typography>\r\n\r\n        <InputTextField\r\n          id=\"outlined\"\r\n          coreel=\"Логин\"\r\n          variant=\"outlined\"\r\n          inputRef={newLoginValue}\r\n          className={classes.root}\r\n        />\r\n\r\n        <InputTextField\r\n          id=\"outlined\"\r\n          coreel=\"Почта\"\r\n          variant=\"outlined\"\r\n          type=\"email\"\r\n          inputRef={neweEmaildValue}\r\n          className={classes.root}\r\n        />\r\n        <InputTextField\r\n          id=\"outlined\"\r\n          coreel=\"Пароль\"\r\n          variant=\"outlined\"\r\n          type=\"password\"\r\n          inputRef={newPasswordValue}\r\n          className={classes.root}\r\n        />\r\n        <Button\r\n         \r\n          size=\"large\"\r\n          className={classes.root}\r\n          onClick={() =>\r\n            registration(\r\n              neweEmaildValue.current.value,\r\n              newLoginValue.current.value,\r\n              newPasswordValue.current.value\r\n            )\r\n          }\r\n        >\r\n          Создать\r\n        </Button>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Registration;\r\n","import React, { Component, createRef } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport blueGrey from \"@material-ui/core/colors/blueGrey\";\r\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"25em\",\r\n    \"& > *\": {\r\n      margin: theme.spacing(2),\r\n      color: blueGrey[300],\r\n    },\r\n  },\r\n  color: {\r\n    color: blueGrey[300],\r\n  },\r\n}));\r\n\r\nconst InputTextField = withStyles({\r\n  root: {\r\n    \"& input:valid + fieldset\": {\r\n      borderColor: blueGrey[600],\r\n      borderWidth: 1,\r\n    },\r\n    \"& input:invalid + fieldset\": {\r\n      borderColor: blueGrey[200],\r\n      borderWidth: 2,\r\n    },\r\n    \"& input:valid:focus + fieldset\": {\r\n      bordertWidth: 4,\r\n      borderColor: blueGrey[200],\r\n      padding: \"4px !important\", // override inline-style\r\n    },\r\n    \"& coreel.Mui-focused\": {\r\n      color: blueGrey[700],\r\n    },\r\n  },\r\n})(TextField);\r\n\r\nconst Autorisation = ({ autorisation, newList }) => {\r\n  const loginValue = createRef();\r\n  const passwordValue = createRef();\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid\r\n        container\r\n        direction=\"column\"\r\n        alignItems=\"center\"\r\n        justify=\"flex-start\"\r\n      >\r\n        <Typography variant=\"h2\" gutterBottom className={classes.color}>\r\n          Авторизация\r\n        </Typography>\r\n\r\n        <InputTextField\r\n          className={classes.root}\r\n          id=\"outlined\"\r\n          coreel=\"Логин\"\r\n          variant=\"outlined\"\r\n          inputRef={loginValue}\r\n        />\r\n        <InputTextField\r\n          className={classes.root}\r\n          id=\"outlined-password-input\"\r\n          coreel=\"Password\"\r\n          type=\"password\"\r\n          autoComplete=\"current-password\"\r\n          variant=\"outlined\"\r\n          inputRef={passwordValue}\r\n        />\r\n        <Button\r\n          size=\"large\"\r\n          className={classes.root}\r\n          onClick={async () => {\r\n            await autorisation(\r\n              loginValue.current.value,\r\n              passwordValue.current.value\r\n            );\r\n            await newList();\r\n          }}\r\n        >\r\n          Авторизоваться\r\n        </Button>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Autorisation;\r\n","export const PUT_NEW_TOKEN = \"PUT_NEW_TOKEN\";\r\nexport const PUT_NEW_TOKEN_FROM_REFRESH = \"PUT_NEW_TOKEN_FROM_REFRESH\";\r\nexport const ERROR_REQUEST = \"ERROR_REQUEST\";\r\nexport const EXIT_ACCAUNT = \"EXIT_ACCAUNT\";\r\n\r\nexport const newToken = (username, password) => {\r\n  return async (dispatch) => {\r\n    let formData = new FormData();\r\n    formData.append(\"username\", username);\r\n    formData.append(\"password\", password);\r\n\r\n    let requestOptions = {\r\n      method: \"POST\",\r\n      body: formData,\r\n    };\r\n    let response = await fetch(\r\n      `http://77.244.65.15:3527/api/v1/data/auth/jwt/create/`,\r\n      requestOptions\r\n    );\r\n    let autor = await response.json();\r\n\r\n    if (response.ok) {\r\n      await localStorage.setItem(\"Authorization\", `Bearer ${autor.access}`);\r\n      await localStorage.setItem(\"remember\", \"true\");\r\n      await localStorage.setItem(\"tokenData\", Date.now());\r\n      await localStorage.setItem(\"refresh\", autor.refresh);\r\n\r\n      await dispatch({\r\n        type: PUT_NEW_TOKEN,\r\n        payload: `Bearer ${autor.access}`,\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport const newTokenFromRefresh = () => {\r\n  return async (dispatch) => {\r\n    const tokenRefresh = localStorage.getItem(\"refresh\");\r\n    let formData = new FormData();\r\n    formData.append(\"refresh\", tokenRefresh);\r\n\r\n    let requestOptions2 = {\r\n      body: formData,\r\n      method: \"POST\",\r\n    };\r\n\r\n    let resp = await fetch(\r\n      `http://77.244.65.15:3527/api/v1/data/auth/jwt/refresh/`,\r\n      requestOptions2\r\n    );\r\n    if (resp.status === 401) {\r\n      await dispatch({\r\n        type: ERROR_REQUEST,\r\n      });\r\n    }\r\n\r\n    let newToken = await resp.json();\r\n    await localStorage.setItem(\"Authorization\", `Bearer ${newToken.access}`);\r\n\r\n    await dispatch({\r\n      type: PUT_NEW_TOKEN_FROM_REFRESH,\r\n      payload: `Bearer ${newToken.access}`,\r\n    });\r\n  };\r\n};\r\n\r\nexport function exitAccaunt() {\r\n  localStorage.clear();\r\n  return {\r\n    type: EXIT_ACCAUNT,\r\n    payload: true,\r\n  };\r\n}\r\n","export const OPEN_AUTORISATION = \"OPEN_AUTORISATION\";\r\nexport const OPEN_REGISTRATION = \"OPEN_REGISTRATION\";\r\nexport const OPEN_ACCAUNT_MENU = \"OPEN_ACCAUNT_MENU\";\r\nexport const CLOSE_ACCAUNT_MENU = \"CLOSE_ACCAUNT_MENU\";\r\n\r\nexport function openAuterisation() {\r\n    return {\r\n      type: OPEN_AUTORISATION,\r\n      payload: true,\r\n    }\r\n  }\r\n\r\nexport function openRegistration() {\r\n    return {\r\n      type: OPEN_REGISTRATION,\r\n      payload: false,\r\n    }\r\n  }\r\n\r\nexport function openAccauntMenu() {\r\n    return {\r\n      type: OPEN_ACCAUNT_MENU,\r\n      payload: true,\r\n    }\r\n  }\r\n\r\nexport function closeAccauntMenu() {\r\n    return {\r\n      type: CLOSE_ACCAUNT_MENU,\r\n      payload: false,\r\n    }\r\n  }\r\n\r\n","export const REGISTRATION = \"REGISTRATION\";\r\n\r\nexport const newUser = (newEmail, newUsername, newPassword) => {\r\n  return async dispatch => {\r\n    let formData = new FormData();\r\n    formData.append(\"username\",newUsername );\r\n    formData.append(\"password\", newPassword);\r\n    formData.append(\"email\", newEmail);\r\n\r\n    let requestOptions = {\r\n      method: \"POST\",\r\n      body: formData\r\n    };\r\n\r\n    let response = await fetch(\r\n      `http://77.244.65.15:3527/api/v1/data/auth/users/`,\r\n      requestOptions\r\n    );\r\n    let autor = await response.json();\r\n    console.log(autor);\r\n\r\n    await dispatch({\r\n      type: REGISTRATION\r\n    });\r\n  };\r\n};\r\n","import React, { Component, Fragment } from \"react\";\r\nimport Input from \"./components/Input/Input\";\r\nimport Header from \"./components/Header/Header\";\r\nimport Perfom from \"./components/Perform/Perfom\";\r\nimport Registration from \"./components/Registration/Registration\";\r\nimport Autorisation from \"./components/Autorisation/Autorisation\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  newToken,\r\n  newTokenFromRefresh,\r\n  exitAccaunt,\r\n} from \"./store/token/action\";\r\nimport {\r\n  openAuterisation,\r\n  openRegistration,\r\n  openAccauntMenu,\r\n  closeAccauntMenu,\r\n} from \"./store/entrance/action\";\r\n\r\n\r\nimport { newUser } from \"./store/registration/action\";\r\nimport { newList } from \"./store/list/action\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nclass App extends Component {\r\n  \r\n  componentDidMount() {\r\n    const { isAutorisation, newTokenFromRefresh, newList } = this.props;\r\n    if (isAutorisation) {\r\n      newList();\r\n    }\r\n    const remember = localStorage.getItem(\"remember\") === \"true\";\r\n    const tokenData = localStorage.getItem(\"tokenData\");\r\n\r\n    if (remember) {\r\n      if (Date.now() >= tokenData * 5000) {\r\n        newTokenFromRefresh();\r\n      }\r\n    }\r\n  }\r\n\r\n  // рендер -----------------------------------------------------------------------\r\n\r\n  render() {\r\n    const {\r\n      isAutorisation,\r\n      autorisation,\r\n      registration,\r\n      newList,\r\n      completedList,\r\n      isOpenTopDraw,\r\n      entrance,\r\n      openAuterisation,\r\n      openRegistration,\r\n      openAccauntMenu,\r\n      closeAccauntMenu,\r\n      accauntMenu,\r\n      exitAccaunt,\r\n    } = this.props;\r\n\r\n    return (\r\n      <div style={{ height: \"100vh\" }}>\r\n        <Header\r\n          isAutorisation={isAutorisation}\r\n          openAuterisation={openAuterisation}\r\n          entrance={entrance}\r\n          openRegistration={openRegistration}\r\n          openAccauntMenu={openAccauntMenu}\r\n          closeAccauntMenu={closeAccauntMenu}\r\n          accauntMenu={accauntMenu}\r\n          exitAccaunt={exitAccaunt}\r\n        />\r\n\r\n        {!isAutorisation ? (\r\n          <Grid\r\n            container\r\n            direction=\"row\"\r\n            justify=\"space-evenly\"\r\n            alignItems=\"center\"\r\n            style={{ height: \"90vh\" }}\r\n          >\r\n            {entrance ? (\r\n              <Autorisation autorisation={autorisation} newList={newList} />\r\n            ) : (\r\n              <Registration registration={registration} />\r\n            )}\r\n          </Grid>\r\n        ) : (\r\n          <Fragment>\r\n            <Input />\r\n          </Fragment>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToprops = (store) => {\r\n  return {\r\n    isAutorisation: store.tokenReducer.isAutorisation,\r\n    token: store.tokenReducer.token,\r\n    list: store.listReducer.list,\r\n    completedList: store.completedListReducer.completedList,\r\n    entrance: store.changeEntranceReduser.entrance,\r\n    accauntMenu: store.changeEntranceReduser.accauntMenu,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    autorisation: (username, password) =>\r\n      dispatch(newToken(username, password)),\r\n    registration: (newEmail, newUsername, newPassword) =>\r\n      dispatch(newUser(newEmail, newUsername, newPassword)),\r\n    newList: () => dispatch(newList()),\r\n    newTokenFromRefresh: () => dispatch(newTokenFromRefresh()),\r\n    openAuterisation: () => dispatch(openAuterisation()),\r\n    openRegistration: () => dispatch(openRegistration()),\r\n    openAccauntMenu: () => dispatch(openAccauntMenu()),\r\n    closeAccauntMenu: () => dispatch(closeAccauntMenu()),\r\n    exitAccaunt: () => dispatch(exitAccaunt()),\r\n  };\r\n};\r\nexport default connect(mapStateToprops, mapDispatchToProps)(App);\r\n\r\n// toCompleted = id => {\r\n\r\n//   const { list, completedList } = this.state;\r\n//   this.setState(() =>\r\n//     // eslint-disable-next-line\r\n//     list.map((item, index) => {\r\n//       if (item.id === id) {\r\n//         completedList.push(\r\n//           id: Date.now(),\r\n//           description: item.description,\r\n//           status: \"no\"\r\n//         });\r\n//         list.splice(index, 1);\r\n//       }\r\n//     })\r\n//   );\r\n//   console.log(completedList);\r\n// };\r\n","import { PUT_NEW_TOKEN ,ERROR_REQUEST, PUT_NEW_TOKEN_FROM_REFRESH, EXIT_ACCAUNT} from \"./action\";\r\nconst hasToken = localStorage.getItem(\"Authorization\");\r\nconst initialState = {\r\n  token: hasToken,\r\n  isAutorisation: hasToken === null ? false: true\r\n}\r\nexport const tokenReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case PUT_NEW_TOKEN:\r\n      return {\r\n        ...state,\r\n        token: action.payload,\r\n        isAutorisation: true\r\n      };\r\n    case PUT_NEW_TOKEN_FROM_REFRESH:\r\n      return {\r\n        ...state,\r\n        token: action.payload,\r\n        isAutorisation: true\r\n      };\r\n    \r\n    case EXIT_ACCAUNT:\r\n      return {\r\n        ...state,\r\n             isAutorisation: false\r\n      };\r\n    \r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { GET_LIST, PUT_NEW_POINT_LIST } from \"./action\";\r\n\r\nconst initialState = {\r\n  list: []\r\n};\r\n\r\nexport const listReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_LIST:\r\n      return {\r\n        ...state,\r\n        list: action.payload\r\n      };\r\n    case PUT_NEW_POINT_LIST:\r\n      return {\r\n        ...state,\r\n        list: [action.payload, ...state.list]\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","const initialState = {\r\n    completedList: []\r\n  };\r\n  \r\n export  const completedListReducer = (state = initialState, action) => {\r\n \r\n    return state;\r\n  };\r\n  ","import { OPEN_NEW_CARD, CLOSE_NEW_CARD } from \"./action\";\r\n\r\nconst initialState = {\r\n  isOpenNewCard: false,\r\n};\r\n\r\nexport const newCardReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case OPEN_NEW_CARD:\r\n      return {\r\n        ...state,\r\n        isOpenNewCard: action.payload,\r\n      };\r\n\r\n    case CLOSE_NEW_CARD:\r\n      return {\r\n        ...state,\r\n        isOpenNewCard: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  OPEN_AUTORISATION,\r\n  OPEN_REGISTRATION,\r\n  OPEN_ACCAUNT_MENU,\r\n  CLOSE_ACCAUNT_MENU,\r\n} from \"./action\";\r\n\r\nconst initialState = {\r\n  entrance: true,\r\n  accauntMenu: false,\r\n};\r\n\r\nexport const changeEntranceReduser = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case OPEN_AUTORISATION:\r\n      return {\r\n        ...state,\r\n        entrance: action.payload,\r\n      };\r\n\r\n    case OPEN_REGISTRATION:\r\n      return {\r\n        ...state,\r\n        entrance: action.payload,\r\n      };\r\n\r\n    case OPEN_ACCAUNT_MENU:\r\n      return {\r\n        ...state,\r\n        accauntMenu: action.payload,\r\n      };\r\n    case CLOSE_ACCAUNT_MENU:\r\n      return {\r\n        ...state,\r\n        accauntMenu: action.payload,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from 'redux'\r\nimport {tokenReducer} from \"./token/reducer\"\r\nimport {listReducer} from \"./list/reducer\"\r\nimport {completedListReducer} from \"./completedList/reducer\"\r\nimport {newCardReducer} from \"./openNewCard/reducer\"\r\nimport {changeEntranceReduser} from \"./entrance/reducer\"\r\n\r\nexport const rootReducer = combineReducers({\r\n    tokenReducer: tokenReducer,\r\n    listReducer: listReducer,\r\n    completedListReducer: completedListReducer,\r\n    newCardReducer: newCardReducer,\r\n    changeEntranceReduser: changeEntranceReduser,\r\n})","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport \"./index.scss\";\r\nimport { Provider } from \"react-redux\";\r\nimport { createStore, applyMiddleware, compose } from \"redux\";\r\nimport logger from \"redux-logger\";\r\nimport thunk from \"redux-thunk\";\r\nimport { rootReducer } from \"./store/reducersCombaine\";\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  // compose(\r\n    applyMiddleware(logger, thunk),\r\n    // window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n  // )\r\n);\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n"],"sourceRoot":""}