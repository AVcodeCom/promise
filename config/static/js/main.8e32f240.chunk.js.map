{"version":3,"sources":["components/List/List.jsx","components/Input/Input.jsx","components/Header/Header.jsx","components/Perform/Perfom.jsx","components/Footer/Footer.jsx","components/Registration/Registration.jsx","components/Autorisation/Autorisation.jsx","App.jsx","store/token/action.js","store/registration/action.js","store/list/action.js","registerServiceWorker.js","store/token/reducer.js","store/list/reducer.js","store/completedList/reducer.js","store/reducersCombaine.js","index.js"],"names":["List","props","list","map","className","key","id","status","description","href","onClick","toCompleted","Input","inputValue","createRef","inputClick","bind","this","newPointList","current","value","newList","ref","type","placeholder","Component","Header","Perfom","completedList","item","Footer","NewAutor","neweEmaildValue","newLoginValue","newPasswordValue","registration","name","loginValue","passwordValue","autorisation","a","async","App","isAutorisation","newTokenFromRefresh","console","log","Autorisation","Registration","connect","store","tokenReducer","token","listReducer","completedListReducer","dispatch","username","password","formData","FormData","append","requestOptions","method","body","fetch","response","json","autor","ok","localStorage","setItem","access","Date","now","refresh","payload","newToken","newEmail","newUsername","newPassword","newUser","headers","Authorization","getItem","results","remember","tokenData","tokenRefresh","requestOptions2","resp","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","onupdatefound","installingWorker","installing","onstatechange","state","controller","catch","error","hasToken","initialState","rootReducer","combineReducers","action","createStore","applyMiddleware","logger","thunk","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"4YAkBeA,G,MAfF,SAAAC,GAAK,OAChBA,EAAMC,KAAKC,KAAI,SAAAD,GAAI,OACjB,wBAAIE,UAAU,UAAUC,IAAKH,EAAKI,IAGhC,0BAAMF,UAA2B,QAAhBF,EAAKK,OAAmB,MAAQ,MAC9CL,EAAKM,aAGR,uBAAGC,KAAK,MAAMC,QAAS,kBAAMT,EAAMU,YAAYT,EAAKI,MAApD,sEC6BSM,G,kBApCb,WAAYX,GAAQ,IAAD,8BACjB,4CAAMA,KAGRY,WAAaC,sBAFX,EAAKC,WAAa,EAAKA,WAAWC,KAAhB,gBAFD,E,0EAOjBC,KAAKhB,MAAMiB,aAAaD,KAAKJ,WAAWM,QAAQC,OAEhDH,KAAKJ,WAAWM,QAAQC,MAAQ,M,+BAGxB,IAAD,EACmBH,KAAKhB,MAAvBC,EADD,EACCA,KADD,EACOmB,QACd,OACE,6BAASjB,UAAU,SACjB,+GACA,2BACEkB,IAAKL,KAAKJ,WACVU,KAAK,OACLH,MAAOH,KAAKG,MACZI,YAAY,oFAEd,4BAAQd,QAASO,KAAKF,YAAtB,qDACA,4BACE,kBAAC,EAAD,CACEb,KAAMA,U,GA3BEuB,cCMLC,G,MARA,WACb,OACE,gCACE,wBAAItB,UAAU,QAAd,cCYSuB,G,MAfA,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAChB,OACE,6BAASxB,UAAU,QACjB,8FACA,4BACCwB,EAAczB,KAAI,SAAA0B,GAAI,OACrB,wBAAIxB,IAAKwB,EAAKvB,IACXuB,EAAKrB,oBCCDsB,G,MARA,WACb,OACE,mCC4CWC,G,iNA5CbC,gBAAkBlB,sB,EAClBmB,cAAgBnB,sB,EAChBoB,iBAAmBpB,sB,wEAET,IAAD,OACCqB,EAAiBlB,KAAKhB,MAAtBkC,aACR,OACE,yBAAK/B,UAAU,SACb,iKACA,2BACEkB,IAAKL,KAAKe,gBACVT,KAAK,QACLa,KAAK,QACLZ,YAAY,mCAEd,2BACEF,IAAKL,KAAKgB,cACVV,KAAK,OACLa,KAAK,QACLZ,YAAY,mCAEd,2BACEF,IAAKL,KAAKiB,iBACVX,KAAK,OACLa,KAAK,WACLZ,YAAY,yCAGd,4BACEd,QAAS,kBACPyB,EACE,EAAKH,gBAAgBb,QAAQC,MAC7B,EAAKa,cAAcd,QAAQC,MAC3B,EAAKc,iBAAiBf,QAAQC,SALpC,mD,GA7BeK,c,gBCuCRM,G,iNAtCbM,WAAavB,sB,EACbwB,cAAgBxB,sB,wEAEN,IAAD,SAC2BG,KAAKhB,MAA/BsC,EADD,EACCA,aAAclB,EADf,EACeA,QACtB,OACE,yBAAKjB,UAAU,SACb,mGACA,2BACEkB,IAAKL,KAAKoB,WACVd,KAAK,OACLa,KAAK,QACLZ,YAAY,mCAEd,2BACEF,IAAKL,KAAKqB,cACVf,KAAK,OACLa,KAAK,WACLZ,YAAY,yCAGd,4BACEd,QAAS,oBAAA8B,EAAAC,OAAA,kEAAAD,EAAA,MACDD,EACJ,EAAKF,WAAWlB,QAAQC,MACxB,EAAKkB,cAAcnB,QAAQC,QAHtB,yBAAAoB,EAAA,MAKDnB,KALC,uCADX,6F,GAtBeI,c,QCWjBiB,E,4LACiB,IAAD,EACuCzB,KAAKhB,MAAtD0C,EADU,EACVA,eAAgBC,EADN,EACMA,oBAAqBvB,EAD3B,EAC2BA,QAC5CsB,GACDtB,IAEAuB,M,+BAuBQ,IAAD,EASH3B,KAAKhB,MAPP0C,EAFK,EAELA,eACAJ,EAHK,EAGLA,aACAJ,EAJK,EAILA,aACAd,EALK,EAKLA,QACAnB,EANK,EAMLA,KACA0B,EAPK,EAOLA,cACAV,EARK,EAQLA,aAIF,OAFA2B,QAAQC,IAAI5C,GAGV,yBAAKE,UAAU,QACb,kBAAC,EAAD,MAEEuC,EAMA,0BAAMvC,UAAU,QACd,iCACE,kBAAC,EAAD,CACEF,KAAMA,EACNgB,aAAcA,EACdG,QAASA,KAGb,iCACE,kBAAC,EAAD,CAAQO,cAAeA,MAd3B,iCACE,kBAACmB,EAAD,CAAcR,aAAcA,EAAclB,QAASA,IACnD,kBAAC2B,EAAD,CAAcb,aAAcA,KAiBhC,kBAAC,EAAD,W,GAjEUV,aA2FHwB,eArBS,SAAAC,GACtB,MAAO,CACLP,eAAgBO,EAAMC,aAAaR,eACnCS,MAAOF,EAAMC,aAAaC,MAC1BlD,KAAMgD,EAAMG,YAAYnD,KACxB0B,cAAesB,EAAMI,qBAAqB1B,kBAInB,SAAA2B,GACzB,MAAO,CACLhB,aAAc,SAACiB,EAAUC,GAAX,OACZF,EC5FkB,SAACC,EAAUC,GACjC,OAAO,SAAMF,GAAN,qBAAAf,EAAAC,OAAA,uDACDiB,EAAW,IAAIC,UACVC,OAAO,WAAYJ,GAC5BE,EAASE,OAAO,WAAYH,GAExBI,EAAiB,CACnBC,OAAQ,OACRC,KAAML,GAPH,WAAAlB,EAAA,MASgBwB,MAAM,wDAEzBH,IAXG,cASDI,EATC,kBAAAzB,EAAA,MAaayB,EAASC,QAbtB,UAaDC,EAbC,QAeDF,EAASG,GAfR,oCAAA5B,EAAA,MAgBG6B,aAAaC,QAAQ,gBAArB,iBAAgDH,EAAMI,UAhBzD,2BAAA/B,EAAA,MAiBG6B,aAAaC,QAAQ,WAAY,SAjBpC,2BAAA9B,EAAA,MAkBG6B,aAAaC,QAAQ,YAAaE,KAAKC,QAlB1C,2BAAAjC,EAAA,MAmBG6B,aAAaC,QAAQ,UAAWH,EAAMO,UAnBzC,2BAAAlC,EAAA,MAqBGe,EAAS,CACbhC,KA3BqB,gBA4BrBoD,QAAQ,UAAD,OAAYR,EAAMI,WAvBxB,uCD2FMK,CAASpB,EAAUC,KAC9BtB,aAAc,SAAC0C,EAAUC,EAAaC,GAAxB,OACZxB,EEhGiB,SAACsB,EAAUC,EAAaC,GAC7C,OAAO,SAAMxB,GAAN,qBAAAf,EAAAC,OAAA,uDACDiB,EAAW,IAAIC,UACVC,OAAO,WAAYmB,GAC5BrB,EAASE,OAAO,WAAYkB,GAC5BpB,EAASE,OAAO,QAASiB,GAErBhB,EAAiB,CACnBC,OAAQ,OACRC,KAAML,GARH,WAAAlB,EAAA,MAWgBwB,MAAM,mDAEzBH,IAbG,cAWDI,EAXC,mBAAAzB,EAAA,MAeayB,EAASC,QAftB,eAeDC,EAfC,OAgBLtB,QAAQC,IAAIqB,GAhBP,YAAA3B,EAAA,MAkBCe,EAAS,CACbhC,KAtBsB,kBAGnB,uCF+FMyD,CAAQH,EAAUC,EAAaC,KAC1C1D,QAAS,kBAAMkC,GG/FV,SAAMA,GAAN,mBAAAf,EAAAC,OAAA,uDACDoB,EAAiB,CACnBC,OAAQ,MACRmB,QAAS,CACPC,cAAeb,aAAac,QAAQ,mBAJnC,WAAA3C,EAAA,MAQgBwB,MAAM,gDAEzBH,IAVG,cAQDI,EARC,kBAAAzB,EAAA,MAYYyB,EAASC,QAZrB,cAYDhE,EAZC,kBAAAsC,EAAA,MAaCe,EAAS,CACbhC,KAlBkB,WAmBlBoD,QAASzE,EAAKkF,WAfX,yCHgGLlE,aAAc,SAAAV,GAAW,OAAI+C,EG5EL,SAAA/C,GAC1B,OAAO,SAAM+C,GAAN,mBAAAf,EAAAC,OAAA,kEAAAD,EAAA,MACCe,EAAS,CACbhC,KA1B4B,qBA2B5BoD,QAAS,CACPrE,GAAIkE,KAAKC,MACTjE,YAAaA,MALZ,cAQDkD,EAAW,IAAIC,UAEVC,OAAO,OAAQ,OACxBF,EAASE,OAAO,cAAepD,GAE3BqD,EAAiB,CACnBE,KAAML,EACNuB,QAAS,CACPC,cAAeb,aAAac,QAAQ,kBAEtCrB,OAAQ,QAlBL,WAAAtB,EAAA,MAqBgBwB,MAAM,oDAEzBH,IAvBG,OAqBDI,EArBC,OA0BLpB,QAAQC,IAAImB,EAASC,QA1BhB,uCH2EiChD,CAAaV,KACnDoC,oBAAqB,kBAAMW,GClEtB,SAAMA,GAAN,2BAAAf,EAAAC,OAAA,mDACC4C,EAAgD,SAArChB,aAAac,QAAQ,YAChCG,EAAYjB,aAAac,QAAQ,cAEnCE,EAJC,sBAKCb,KAAKC,OAAqB,IAAZa,GALf,wBAMKC,EAAelB,aAAac,QAAQ,YACtCzB,EAAW,IAAIC,UACVC,OAAO,UAAW2B,GAEvBC,EAAkB,CACpBzB,KAAML,EACNI,OAAQ,QAZT,YAAAtB,EAAA,MAegBwB,MAAM,yDAErBwB,IAjBD,WAmBmB,OAJhBC,EAfH,QAmBQlF,OAnBR,oCAAAiC,EAAA,MAoBOe,EAAS,CACbhC,KAtDiB,mBAiCpB,2BAAAiB,EAAA,MAyBoBiD,EAAKvB,QAzBzB,eAyBGU,EAzBH,mBAAApC,EAAA,MA0BK6B,aAAaC,QACjB,gBADI,iBAEMM,EAASL,UA5BpB,2BAAA/B,EAAA,MA+BKe,EAAS,CACbhC,KAlEgC,6BAmEhCoD,QAAQ,UAAD,OAAYC,EAASL,WAjC7B,6CDsEMtB,CAA6CP,GI/FtDgD,G,MAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,4DAsCN,SAASC,EAAgBC,GACvBC,UAAUC,cACPC,SAASH,GACTI,MAAK,SAAAlE,GACJA,EAAamE,cAAgB,WAC3B,IAAMC,EAAmBpE,EAAaqE,WACtCD,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBG,QACfR,UAAUC,cAAcQ,WAK1B9D,QAAQC,IAAI,6CAKZD,QAAQC,IAAI,4CAMrB8D,OAAM,SAAAC,GACLhE,QAAQgE,MAAM,4CAA6CA,M,2CC9E3DC,EAAWzC,aAAac,QAAQ,iBAChC4B,EAAe,CACnB3D,MAAO0D,EACPnE,eAA6B,OAAbmE,G,QCFZC,EAAe,CACnB7G,KAAM,ICHF6G,EAAe,CACjBnF,cAAe,ICINoF,EAAcC,YAAgB,CACvC9D,aHAwB,WAAmC,IAAlCuD,EAAiC,uDAAzBK,EAAcG,EAAW,uCAC5D,OAAQA,EAAO3F,MACb,IJRyB,gBIczB,IJbsC,6BIcpC,OAAO,eACFmF,EADL,CAEEtD,MAAO8D,EAAOvC,QACdhC,gBAAgB,IAGpB,IJnByB,gBIoBvB,OAAO,eACF+D,EADL,CAEO/D,gBAAgB,IAGzB,QACE,OAAO+D,IGrBTrD,YFDuB,WAAmC,IAAlCqD,EAAiC,uDAAzBK,EAAcG,EAAW,uCAC3D,OAAQA,EAAO3F,MACb,IHRoB,WGSlB,OAAO,eACFmF,EADL,CAEExG,KAAMgH,EAAOvC,UAEjB,IHZ8B,qBGa5B,OAAO,eACF+B,EADL,CAEExG,KAAK,CAAEgH,EAAOvC,SAAV,mBAAsB+B,EAAMxG,SAEpC,QACE,OAAOwG,IEXTpD,qBDJkC,WAAmC,IAAlCoD,EAAiC,uDAAzBK,EAAyB,iCAEpE,OAAOL,KEKLxD,EAAQiE,YACZH,EAAcI,YAAgBC,IAAQC,MASxCC,IAASC,OACP,kBAAC,IAAD,CAAUtE,MAAOA,GACf,kBAAC,EAAD,OAEFuE,SAASC,eAAe,SLLX,WACb,GAA6C,kBAAmBxB,UAAW,CAGzE,GADkB,IAAIyB,IAAIC,IAAwBhC,OAAOC,UAC3CgC,SAAWjC,OAAOC,SAASgC,OAIvC,OAGFjC,OAAOkC,iBAAiB,QAAQ,WAC9B,IAAM7B,EAAK,UAAM2B,IAAN,sBAEPlC,IAiDV,SAAiCO,GAE/BjC,MAAMiC,GACHI,MAAK,SAAApC,GAGkB,MAApBA,EAAS1D,SACuD,IAAhE0D,EAASgB,QAAQ8C,IAAI,gBAAgBC,QAAQ,cAG7C9B,UAAUC,cAAc8B,MAAM5B,MAAK,SAAAlE,GACjCA,EAAa+F,aAAa7B,MAAK,WAC7BT,OAAOC,SAASsC,eAKpBnC,EAAgBC,MAGnBW,OAAM,WACL/D,QAAQC,IACN,oEArEAsF,CAAwBnC,GAIxBC,UAAUC,cAAc8B,MAAM5B,MAAK,WACjCxD,QAAQC,IACN,gHAMJkD,EAAgBC,OKrBxBoC,K","file":"static/js/main.8e32f240.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./list.scss\";\r\n\r\nconst List = props =>\r\n  props.list.map(list => (\r\n    <li className=\"listRow\" key={list.id}>\r\n      {/* <input type=\"checkbox\" onClick={() => props.onCheck(list.id)} /> */}\r\n\r\n      <span className={list.status === \"yes\" ? \"yes\" : \"no\"}>\r\n        {list.description}\r\n      </span>\r\n\r\n      <a href=\"###\" onClick={() => props.toCompleted(list.id)}>\r\n        выполненно\r\n      </a>\r\n    </li>\r\n  ));\r\n\r\nexport default List;\r\n","import React, { Component, createRef } from \"react\";\r\nimport List from \"../List/List\";\r\nimport \"./input.scss\";\r\n\r\nclass Input extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.inputClick = this.inputClick.bind(this);\r\n  }\r\n  inputValue = createRef();\r\n\r\n  inputClick() {\r\n    this.props.newPointList(this.inputValue.current.value);\r\n\r\n    this.inputValue.current.value = \" \";\r\n  }\r\n\r\n  render() {\r\n    const { list, newList } = this.props;\r\n    return (\r\n      <section className=\"input\">\r\n        <h3>Надо выполнить</h3>\r\n        <input\r\n          ref={this.inputValue}\r\n          type=\"text\"\r\n          value={this.value}\r\n          placeholder=\"введите задачу\"\r\n        />\r\n        <button onClick={this.inputClick}>Добавить </button>\r\n        <ul>\r\n          <List\r\n            list={list}\r\n            // onCheck={this.props.onCheck}\r\n            // toCompleted={this.props.toCompleted}\r\n          />\r\n        </ul>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Input;\r\n","import React from \"react\";\r\nimport \"./header.scss\";\r\nconst Header = () => {\r\n  return (\r\n    <header>\r\n      <h1 className=\"logo\">Promise</h1>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport \"./perfom.scss\";\r\nconst Perfom = ({ completedList }) => {\r\n  return (\r\n    <section className=\"perf\">\r\n      <h3> Выполненно </h3>\r\n      <ul>\r\n      {completedList.map(item => (\r\n        <li key={item.id}>\r\n          {item.description}\r\n        </li>\r\n      ))}\r\n      </ul>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Perfom;\r\n","import React from \"react\";\r\nimport \"./footer.scss\";\r\nconst Footer = () => {\r\n  return (\r\n    <footer>\r\n      \r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React, { Component, createRef } from \"react\";\r\nimport \"./registration.scss\";\r\n\r\nclass NewAutor extends Component {\r\n  neweEmaildValue = createRef();\r\n  newLoginValue = createRef();\r\n  newPasswordValue = createRef();\r\n\r\n  render() {\r\n    const { registration } = this.props;\r\n    return (\r\n      <div className=\"autor\">\r\n        <h5>Создание нового профиля </h5>\r\n        <input\r\n          ref={this.neweEmaildValue}\r\n          type=\"email\"\r\n          name=\"email\"\r\n          placeholder=\"почта\"\r\n        />\r\n        <input\r\n          ref={this.newLoginValue}\r\n          type=\"text\"\r\n          name=\"login\"\r\n          placeholder=\"логин\"\r\n        />\r\n        <input\r\n          ref={this.newPasswordValue}\r\n          type=\"text\"\r\n          name=\"password\"\r\n          placeholder=\"пароль\"\r\n        />\r\n\r\n        <button\r\n          onClick={() =>\r\n            registration(\r\n              this.neweEmaildValue.current.value,\r\n              this.newLoginValue.current.value,\r\n              this.newPasswordValue.current.value\r\n            )\r\n          }\r\n        >\r\n          Создать\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NewAutor;\r\n","import React, { Component, createRef } from \"react\";\r\nimport \"./autorisation.scss\";\r\n\r\nclass NewAutor extends Component {\r\n  loginValue = createRef();\r\n  passwordValue = createRef();\r\n\r\n  render() {\r\n    const { autorisation, newList } = this.props;\r\n    return (\r\n      <div className=\"autor\">\r\n        <h5>Авторизация </h5>\r\n        <input\r\n          ref={this.loginValue}\r\n          type=\"text\"\r\n          name=\"login\"\r\n          placeholder=\"логин\"\r\n        />\r\n        <input\r\n          ref={this.passwordValue}\r\n          type=\"text\"\r\n          name=\"password\"\r\n          placeholder=\"пароль\"\r\n        />\r\n\r\n        <button\r\n          onClick={async () => {\r\n            await autorisation(\r\n              this.loginValue.current.value,\r\n              this.passwordValue.current.value\r\n            );\r\n            await newList();\r\n           \r\n          }}\r\n        >\r\n          Авторизоваться\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NewAutor;\r\n","import React, { Component } from \"react\";\r\nimport Input from \"./components/Input/Input\";\r\nimport Header from \"./components/Header/Header\";\r\nimport Perfom from \"./components/Perform/Perfom\";\r\nimport Footer from \"./components/Footer/Footer\";\r\nimport Registration from \"./components/Registration/Registration\";\r\nimport Autorisation from \"./components/Autorisation/Autorisation\";\r\nimport { connect } from \"react-redux\";\r\nimport { newToken } from \"./store/token/action\";\r\nimport { newTokenFromRefresh } from \"./store/token/action\";\r\nimport { newUser } from \"./store/registration/action\";\r\nimport { newList } from \"./store/list/action\";\r\nimport { newPointList } from \"./store/list/action\";\r\n\r\nclass App extends Component {\r\n  componentDidMount() {\r\n    const { isAutorisation, newTokenFromRefresh, newList } = this.props;\r\n  if(isAutorisation){\r\n    newList();\r\n  }\r\n    newTokenFromRefresh();\r\n  }\r\n\r\n  // toCompleted = id => {\r\n\r\n  //   const { list, completedList } = this.state;\r\n  //   this.setState(() =>\r\n  //     // eslint-disable-next-line\r\n  //     list.map((item, index) => {\r\n  //       if (item.id === id) {\r\n  //         completedList.push({\r\n  //           id: Date.now(),\r\n  //           description: item.description,\r\n  //           status: \"no\"\r\n  //         });\r\n  //         list.splice(index, 1);\r\n  //       }\r\n  //     })\r\n  //   );\r\n  //   console.log(completedList);\r\n  // };\r\n\r\n  // рендер -----------------------------------------------------------------------\r\n  render() {\r\n    const {\r\n      isAutorisation,\r\n      autorisation,\r\n      registration,\r\n      newList,\r\n      list,\r\n      completedList,\r\n      newPointList\r\n    } = this.props;\r\n    console.log(list);\r\n\r\n    return (\r\n      <div className=\"wrap\">\r\n        <Header />\r\n\r\n        {!isAutorisation ? (\r\n          <article>\r\n            <Autorisation autorisation={autorisation} newList={newList} />\r\n            <Registration registration={registration} />\r\n          </article>\r\n        ) : (\r\n          <main className=\"main\">\r\n            <article>\r\n              <Input\r\n                list={list}\r\n                newPointList={newPointList}\r\n                newList={newList}\r\n              />\r\n            </article>\r\n            <article>\r\n              <Perfom completedList={completedList} />\r\n            </article>\r\n          </main>\r\n        )}\r\n\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToprops = store => {\r\n  return {\r\n    isAutorisation: store.tokenReducer.isAutorisation,\r\n    token: store.tokenReducer.token,\r\n    list: store.listReducer.list,\r\n    completedList: store.completedListReducer.completedList\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    autorisation: (username, password) =>\r\n      dispatch(newToken(username, password)),\r\n    registration: (newEmail, newUsername, newPassword) =>\r\n      dispatch(newUser(newEmail, newUsername, newPassword)),\r\n    newList: () => dispatch(newList()),\r\n    newPointList: description => dispatch(newPointList(description)),\r\n    newTokenFromRefresh: () => dispatch(newTokenFromRefresh())\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToprops, mapDispatchToProps)(App);\r\n","export const PUT_NEW_TOKEN = \"PUT_NEW_TOKEN\";\r\nexport const PUT_NEW_TOKEN_FROM_REFRESH = \"PUT_NEW_TOKEN_FROM_REFRESH\";\r\nexport const ERROR_REQUEST = \"ERROR_REQUEST\";\r\n\r\nexport const newToken = (username, password) => {\r\n  return async dispatch => {\r\n    let formData = new FormData();\r\n    formData.append(\"username\", username);\r\n    formData.append(\"password\", password);\r\n\r\n    let requestOptions = {\r\n      method: \"POST\",\r\n      body: formData\r\n    };\r\n    let response = await fetch(\r\n      `http://77.244.65.15:3527/api/v1/data/auth/jwt/create/`,\r\n      requestOptions\r\n    );\r\n    let autor = await response.json();\r\n\r\n    if (response.ok) {\r\n      await localStorage.setItem(\"Authorization\", `Bearer ${autor.access}`);\r\n      await localStorage.setItem(\"remember\", \"true\");\r\n      await localStorage.setItem(\"tokenData\", Date.now());\r\n      await localStorage.setItem(\"refresh\", autor.refresh);\r\n\r\n      await dispatch({\r\n        type: PUT_NEW_TOKEN,\r\n        payload: `Bearer ${autor.access}`\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport const newTokenFromRefresh = () => {\r\n  return async dispatch => {\r\n    const remember = localStorage.getItem(\"remember\") === \"true\";\r\n    const tokenData = localStorage.getItem(\"tokenData\");\r\n\r\n    if (remember) {\r\n      if (Date.now() >= tokenData * 5000) {\r\n        const tokenRefresh = localStorage.getItem(\"refresh\");\r\n        let formData = new FormData();\r\n        formData.append(\"refresh\", tokenRefresh);\r\n\r\n        let requestOptions2 = {\r\n          body: formData,\r\n          method: \"POST\"\r\n        };\r\n\r\n        let resp = await fetch(\r\n          `http://77.244.65.15:3527/api/v1/data/auth/jwt/refresh/`,\r\n          requestOptions2\r\n        );\r\n        if (resp.status === 401) {\r\n          await dispatch({\r\n            type: ERROR_REQUEST\r\n          });\r\n        }\r\n\r\n        let newToken = await resp.json();\r\n        await localStorage.setItem(\r\n          \"Authorization\",\r\n          `Bearer ${newToken.access}`\r\n        );\r\n\r\n        await dispatch({\r\n          type: PUT_NEW_TOKEN_FROM_REFRESH,\r\n          payload: `Bearer ${newToken.access}`\r\n        });\r\n      }\r\n    }\r\n  };\r\n};\r\n","export const REGISTRATION = \"REGISTRATION\";\r\n\r\nexport const newUser = (newEmail, newUsername, newPassword) => {\r\n  return async dispatch => {\r\n    let formData = new FormData();\r\n    formData.append(\"username\", newPassword);\r\n    formData.append(\"password\", newUsername);\r\n    formData.append(\"email\", newEmail);\r\n\r\n    let requestOptions = {\r\n      method: \"POST\",\r\n      body: formData\r\n    };\r\n\r\n    let response = await fetch(\r\n      `http://77.244.65.15:3527/api/v1/data/auth/users/`,\r\n      requestOptions\r\n    );\r\n    let autor = await response.json();\r\n    console.log(autor);\r\n\r\n    await dispatch({\r\n      type: REGISTRATION\r\n    });\r\n  };\r\n};\r\n","export const GET_LIST = \"GET_LIST\";\r\nexport const PUT_NEW_POINT_LIST = \"PUT_NEW_POINT_LIST\";\r\n\r\nexport const newList = () => {\r\n  return async dispatch => {\r\n    let requestOptions = {\r\n      method: \"GET\",\r\n      headers: {\r\n        Authorization: localStorage.getItem(\"Authorization\")\r\n      }\r\n    };\r\n\r\n    let response = await fetch(\r\n      `http://77.244.65.15:3527/api/v1/data/promise/`,\r\n      requestOptions\r\n    );\r\n    let list = await response.json();\r\n    await dispatch({\r\n      type: GET_LIST,\r\n      payload: list.results\r\n    });\r\n  };\r\n};\r\n\r\nexport const newPointList = description => {\r\n  return async dispatch => {\r\n    await dispatch({\r\n      type: PUT_NEW_POINT_LIST,\r\n      payload: {\r\n        id: Date.now(),\r\n        description: description\r\n      }\r\n    });\r\n    let formData = new FormData();\r\n\r\n    formData.append(\"name\", \"123\");\r\n    formData.append(\"description\", description);\r\n\r\n    let requestOptions = {\r\n      body: formData,\r\n      headers: {\r\n        Authorization: localStorage.getItem(\"Authorization\")\r\n      },\r\n      method: \"POST\"\r\n    };\r\n\r\n    let response = await fetch(\r\n      `http://77.244.65.15:3527/api/v1/data/promise/new/`,\r\n      requestOptions\r\n    );\r\n\r\n    console.log(response.json());\r\n  };\r\n};\r\n\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import { PUT_NEW_TOKEN ,ERROR_REQUEST, PUT_NEW_TOKEN_FROM_REFRESH} from \"./action\";\r\nconst hasToken = localStorage.getItem(\"Authorization\");\r\nconst initialState = {\r\n  token: hasToken,\r\n  isAutorisation: hasToken === null ? false: true\r\n}\r\nexport const tokenReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case PUT_NEW_TOKEN:\r\n      return {\r\n        ...state,\r\n        token: action.payload,\r\n        isAutorisation: true\r\n      };\r\n    case PUT_NEW_TOKEN_FROM_REFRESH:\r\n      return {\r\n        ...state,\r\n        token: action.payload,\r\n        isAutorisation: true\r\n      };\r\n    \r\n    case ERROR_REQUEST:\r\n      return {\r\n        ...state,\r\n             isAutorisation: false\r\n      };\r\n    \r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { GET_LIST, PUT_NEW_POINT_LIST } from \"./action\";\r\n\r\nconst initialState = {\r\n  list: []\r\n};\r\n\r\nexport const listReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_LIST:\r\n      return {\r\n        ...state,\r\n        list: action.payload\r\n      };\r\n    case PUT_NEW_POINT_LIST:\r\n      return {\r\n        ...state,\r\n        list: [action.payload, ...state.list]\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","const initialState = {\r\n    completedList: []\r\n  };\r\n  \r\n export  const completedListReducer = (state = initialState, action) => {\r\n \r\n    return state;\r\n  };\r\n  ","import { combineReducers } from 'redux'\r\nimport {tokenReducer} from \"./token/reducer\"\r\nimport {listReducer} from \"./list/reducer\"\r\nimport {completedListReducer} from \"./completedList/reducer\"\r\n\r\nexport const rootReducer = combineReducers({\r\n    tokenReducer: tokenReducer,\r\n    listReducer: listReducer,\r\n    completedListReducer: completedListReducer,\r\n})","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport \"./index.scss\";\r\nimport registerServiceWorker from \"./registerServiceWorker\";\r\nimport { Provider } from \"react-redux\";\r\nimport { createStore, applyMiddleware, compose } from \"redux\";\r\nimport logger from \"redux-logger\";\r\nimport thunk from \"redux-thunk\";\r\nimport { rootReducer } from \"./store/reducersCombaine\";\r\n\r\nconst store = createStore(\r\n  rootReducer,  applyMiddleware(logger, thunk)\r\n\r\n  // compose(\r\n  //   window.__REDUX_DEVTOOLS_EXTENSION__ &&\r\n  //     window.__REDUX_DEVTOOLS_EXTENSION__(),\r\n  \r\n  // )\r\n);\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\nregisterServiceWorker();\r\n"],"sourceRoot":""}